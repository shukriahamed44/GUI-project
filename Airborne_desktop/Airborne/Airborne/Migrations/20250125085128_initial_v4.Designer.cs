// <auto-generated />
using Airborne;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Airborne.Migrations
{
    [DbContext(typeof(DatabaseClass))]
    [Migration("20250125085128_initial_v4")]
    partial class initial_v4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("Airborne.Aircraft_Details", b =>
                {
                    b.Property<string>("Aircraft_ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Aircraft")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Aircraft_ID");

                    b.ToTable("AircraftsList");
                });

            modelBuilder.Entity("Airborne.AirportsTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("airport_Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AirportsList");
                });

            modelBuilder.Entity("Airborne.Booking", b =>
                {
                    b.Property<string>("NIC_number")
                        .HasColumnType("TEXT");

                    b.Property<string>("Arrival_airport")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Contact_number")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Departure_airport")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Departure_date")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Departure_time")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Flight_number")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Total_price")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("number_of_passengers")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("NIC_number");

                    b.ToTable("BookingList");
                });

            modelBuilder.Entity("Airborne.UserDetails", b =>
                {
                    b.Property<string>("User_ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("User_Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("accountType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("User_ID");

                    b.ToTable("UserDetailsList");
                });
#pragma warning restore 612, 618
        }
    }
}
